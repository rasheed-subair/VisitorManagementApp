@model VisitorManagementApp.Models.Visitor

@{
    ViewBag.Title = "Checkin";
    Layout = "~/Views/Shared/_SecondLayout.cshtml";
}


<div class="container p-4" id="white-bg">
    <h2 class="text-center">Checkin Form</h2>

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success" align="center">@ViewBag.Message</div>

        <h5 align="center">
            @Html.ActionLink("View Appointment details", "Success", "Keycode", new { id = @Session["StaffId"] }, new { @class = "btn btn-secondary btn-lg" })
        </h5>
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EnumDropDownListFor(model => model.Purpose, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                </div>
            </div>

            <div hidden="hidden">
                <div class="form-group">
                    @Html.LabelFor(model => model.TimeIn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TimeIn, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TimeIn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TimeOut, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TimeOut, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TimeOut, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            

            <div class="form-group">
                <div class="col-md-offset-2 col-md-12" align="center">
                    <input type="submit" value="Check-in" class="btn btn-outline-dark btn-lg" />
                </div>
            </div>
        </div>
    }

</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
